/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./assets/style-index.scss ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Shrikhand&display=swap);
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./assets/style-index.scss (1) ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap);
/*!***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./assets/style-index.scss (2) ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@charset "UTF-8";
/*
 * Fichier style-index.scss
 * ------------------------
 * Fichier de style dédié à la page d'index
 */
/*
 * Fichier root.scss
 * ------------------------------------
 * Variables, mixins et initialisations
 */
.fg-primary {
  color: #9356DC !important;
}

*,
::before,
::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  font-family: "roboto", "sans-serif";
}

.container {
  max-width: 1200px;
  margin: auto;
  padding: 0;
  background-color: white;
  color: black;
}

h2 {
  font-size: 1.5rem;
  padding: 2rem 0;
}

.btn {
  font-size: 1rem;
  border: none;
  color: white;
  border-radius: 2rem;
  box-shadow: 2px 1px 5px grey;
  padding: 1rem 3rem;
  background-image: linear-gradient(#FF79DA, #9356DC);
  transition-duration: 250ms;
}
.btn:hover {
  transform: scale(1.02);
  opacity: 0.9;
}

@keyframes appear {
  0% {
    opacity: 1;
    transform: scale(1) rotate(0);
  }
  100% {
    opacity: 0;
    transform: scale(0) rotate(360deg);
  }
}
@keyframes dash {
  0% {
    stroke-dasharray: 1, 150;
    stroke-dashoffset: 0;
  }
  50% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -35;
  }
  100% {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: -124;
  }
}
@keyframes rotate {
  100% {
    transform: rotate(360deg);
  }
}
.bg-spinner {
  display: grid;
  place-items: center;
  position: fixed;
  inset: 0;
  background-color: white;
  animation: appear 1s 3s ease-in;
  animation-fill-mode: forwards;
  z-index: 2;
}

.spinner {
  background-color: white;
  color: green;
  z-index: 3;
  animation: rotate 2s linear infinite;
  width: 100px;
  height: 100px;
}
.spinner .path {
  stroke: hsl(210deg, 70%, 75%);
  stroke-linecap: round;
  animation: dash 1.5s ease-in-out infinite;
}

/*
 * Fichier header.scss
 * ------------------------------------
 * Styles relatifs a la partie header de la page
 */
header {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  box-shadow: 0 3px 3px #c2c2c2;
  margin-bottom: 3px;
  font-family: "Shrikhand", "cursive";
}
header h1 {
  font-size: 2em;
  text-align: center;
  margin: 0 3px 0;
  padding: 1em;
}
header i {
  font: var(--fa-font-solid);
  font-size: 2rem;
  content: "\f060";
  display: inline-block;
}

/*
 * Fichier localisation-banniere.scss
 * ------------------------
 * Localisation et banniere d'accueil
 */
.localisation {
  display: flex;
  justify-content: center;
  gap: 0.5em;
  padding: 1em 0;
  background-color: #e1e1e1;
  font-size: 1.2em;
}

.banniere {
  background-color: #f5f5f5;
  text-align: center;
  padding: 40px 20px;
}
.banniere h2 {
  padding: 0;
  padding-bottom: 1em;
}
.banniere p {
  font-size: small;
  padding: 0;
  padding-bottom: 1em;
}

/*
 * Fichier fonctionnement.scss
 * ------------------------
 * Fichier de style dédié a la rubrique d'explication du fonctionnement du site
 */
.fonctionnement {
  margin-bottom: 30px;
  counter-reset: counter-etape;
  padding: 0 1em;
  font-size: 1em;
}
.fonctionnement ol {
  display: flex;
  flex-direction: row;
  gap: 2rem;
}
@media (max-width: 860px) {
  .fonctionnement ol {
    flex-direction: column;
  }
}
.fonctionnement ol li {
  display: flex;
  align-items: center;
  flex-grow: 1;
  gap: 0.5rem;
  position: relative;
  padding: 1rem 1rem 1rem 2rem;
  margin-left: 1rem;
  border: none;
  list-style: none;
  font-size: 1rem;
  border-radius: 1rem;
  background-color: #f5f5f5;
  box-shadow: 2px 2px 5px grey;
  transition-duration: 250ms;
}
.fonctionnement ol li:hover {
  transform: scale(1.02);
  opacity: 0.9;
}
.fonctionnement ol li::before {
  font-size: 0.975rem;
  display: flex;
  justify-content: center;
  align-items: center;
  align-content: center;
  position: absolute;
  left: -0.65rem;
  width: 1.3rem;
  height: 1.3rem;
  counter-increment: counter-etape;
  content: counter(counter-etape);
  border-radius: 50%;
  background-color: #9356DC;
  color: white;
}

/*
 * Fichier restaurants.scss
 * ------------------------
 * Fichier de style dédié aux cartes de restaurant
 */
.restaurants {
  background-color: #f5f5f5;
  margin-bottom: 1em;
  padding: 0 1em;
}
.restaurants .menus {
  display: grid;
  grid-template-columns: 1fr;
}
.restaurants .menus a {
  text-decoration: inherit;
  color: inherit;
}
@media (min-width: 860px) {
  .restaurants .menus {
    grid-template-columns: 1fr 1fr;
  }
}
.restaurants .menus .card {
  position: relative;
  margin: 1rem 0;
  border-radius: 20px;
  border: none;
  background-color: #fff;
  box-shadow: 0 0 10px lightgray;
}
.restaurants .menus .card img {
  width: 100%;
  border-radius: 20px 20px 0 0;
  height: 200px;
  -o-object-fit: cover;
     object-fit: cover;
}
.restaurants .menus .card h2 {
  padding: 1rem 0 0.25rem 1rem;
  margin: 0;
  font-size: 1.25rem;
}
.restaurants .menus .card p {
  padding: 0 0 1rem 1rem;
}
.restaurants .menus .card.new::after {
  content: "Nouveau";
  position: absolute;
  right: 20px;
  top: 20px;
  padding: 6px 10px;
  background-color: #99E2D0;
  color: #1b6150;
  font-size: 0.9em;
  font-weight: 700;
  border-radius: 3px;
}
.restaurants .menus .card .card-body {
  position: relative;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.restaurants .menus .card .card-body div {
  width: 85%;
}
.restaurants .menus .card .card-body::before {
  /*
   * Mixin heart (coeur contour uniquement) avec parametres
   *  - base opacity: 1  (visible)
   *  - font-weight: 400 (juste le contour)
   */
  font-family: "Font Awesome 5 Free";
  font-weight: 400;
  content: "\f004";
  position: absolute;
  top: calc(50% - 0.5rem);
  right: calc(7.5% - 0.5rem);
  text-align: center;
  color: #9356DC;
  opacity: 1;
}
.restaurants .menus .card .card-body::after {
  /*
   * Mixin heart (coeur plein) avec parametres
   *  - base opacity: 0  (invisible)
   *  - font-weight: 900 (coeur plein)
   */
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  content: "\f004";
  position: absolute;
  top: calc(50% - 0.5rem);
  right: calc(7.5% - 0.5rem);
  text-align: center;
  color: #9356DC;
  opacity: 0;
  transition-duration: 0.5s;
}
.restaurants .menus .card .card-body:hover::after {
  /*
   * Sur le hover on fait apparaitre le coeur plein
   *  - opacity: 1 (visible)
   */
  opacity: 1;
}

/*
 * Fichier footer.scss
 * ------------------------
 * Fichier de style dédié au footer de toutes les pages
 */
footer {
  background-color: #3e3e3e;
  color: white;
  padding-bottom: 20px;
}
footer h2 {
  font-family: "Shrikhand", "cursive";
  font-size: 1.2em;
  font-weight: 400;
  margin: 0;
  padding: 20px;
}
footer .footer {
  display: flex;
  padding: 0 0 0.25em 20px;
  font-size: 1em;
  font-weight: 400;
}
footer .footer i {
  width: 40px;
}
footer .footer h3 {
  font-size: 1em;
  font-weight: 400;
}
footer .footer a {
  text-decoration: none;
  color: white;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/