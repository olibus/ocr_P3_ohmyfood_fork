/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./sass/main-page.scss ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Shrikhand&display=swap);
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./sass/main-page.scss (1) ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap);
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./sass/main-page.scss (2) ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
@import url(https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css);
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[4].oneOf[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[4].oneOf[1].use[4]!./sass/main-page.scss (3) ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/**
 * Set up a decent box model on the root element
 */
html {
  box-sizing: border-box;
}

/**
 * Make all elements from the DOM inherit from the parent box-sizing
 * Since `*` has a specificity of 0, it does not override the `html` value
 * making all elements inheriting from the root box-sizing value
 * See: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/
 */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  font-family: "roboto", "sans-serif";
}

.preload * {
  transition: none !important;
}

/**
 * Basic typography style for copy text
 */
/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: "";
  display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */
.container {
  max-width: 1180px; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  padding: 0;
  width: 100%; /* 1 */
  background-color: white;
  color: black;
}

header {
  position: relative;
  box-shadow: 0 3px 3px #c2c2c2;
  margin-bottom: 3px;
  font-family: "Shrikhand", "cursive";
}
header h1 {
  font-size: 2rem;
  text-align: center;
  margin: 0 3px 0;
  padding: 2rem;
}

.arrow {
  position: absolute;
  top: calc(50% - 0.5em);
  left: 20px;
  font-size: 2rem;
  float: left;
  display: block;
  margin: auto;
  color: black;
}

footer {
  background-color: #3e3e3e;
  color: white;
  padding-bottom: 20px;
}
footer h2 {
  font-family: "Shrikhand", "cursive";
  font-size: 1.2em;
  font-weight: 400;
  margin: 0;
  padding: 20px;
}
footer .footer {
  display: flex;
  padding: 0 0 0.25em 20px;
  font-size: 1em;
  font-weight: 400;
}
footer .footer i {
  width: 40px;
}
footer .footer h3 {
  font-size: 1em;
  font-weight: 400;
}
footer .footer a {
  text-decoration: none;
  color: white;
}

.btn {
  font-size: 1rem;
  border: none;
  color: white;
  border-radius: 2rem;
  box-shadow: 2px 1px 5px grey;
  padding: 1rem 3rem;
  background-image: linear-gradient(#FF79DA, #9356DC);
  transition-duration: 250ms;
}
.btn:hover {
  transform: scale(1.02);
  opacity: 0.9;
}

.container {
  background-color: #f6f6f6;
}

.banner img {
  display: block;
  width: 100%;
  height: 50vh;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center bottom;
     object-position: center bottom;
}

.carte-resto {
  position: relative;
  margin-top: -2rem;
  padding: 0;
  border-radius: 40px;
  background-color: #f6f6f6;
}

.menu-title {
  position: relative;
  display: flex;
  font-family: "Shrikhand", "cursive";
}
.menu-title h2 {
  width: 85%;
  padding: 2rem 0 2rem 1rem;
}
.menu-title::before {
  /*
      * Mixin heart (coeur contour uniquement) avec parametres
      *  - base opacity: 1  (visible)
      *  - font-weight: 400 (juste le contour)
      */
  font-family: "Font Awesome 5 Free";
  font-weight: 400;
  content: "\f004";
  position: absolute;
  top: calc(50% - 0.5rem);
  right: calc(7.5% - 0.5rem);
  text-align: center;
  color: #9356DC;
  opacity: 1;
}
.menu-title::after {
  /*
      * Mixin heart (coeur plein) avec parametres
      *  - base opacity: 0  (invisible)
      *  - font-weight: 900 (coeur plein)
      */
  font-family: "Font Awesome 5 Free";
  font-weight: 900;
  content: "\f004";
  position: absolute;
  top: calc(50% - 0.5rem);
  right: calc(7.5% - 0.5rem);
  text-align: center;
  color: #9356DC;
  opacity: 0;
  transition-duration: 0.5s;
}
.menu-title:hover::after {
  /*
      * Sur le hover on fait apparaitre le coeur plein
      *  - opacity: 1 (visible)
      */
  opacity: 1;
}

.menu {
  display: grid;
  grid-template-columns: 1fr;
  margin-top: -2em;
  border-radius: 40px;
  background-color: #f6f6f6;
}
@media (min-width: 1100px) {
  .menu {
    grid-template-columns: repeat(3, 1fr);
  }
}
.menu .section:nth-of-type(1) {
  animation-delay: 200ms;
}
.menu .section:nth-of-type(2) {
  animation-delay: 400ms;
}
.menu .section:nth-of-type(3) {
  animation-delay: 600ms;
}
.menu .section:nth-of-type(4) {
  animation-delay: 800ms;
}
.menu .section:nth-of-type(5) {
  animation-delay: 1000ms;
}
.menu .section:nth-of-type(6) {
  animation-delay: 1200ms;
}
.menu .section:nth-of-type(7) {
  animation-delay: 1400ms;
}
.menu .section:nth-of-type(8) {
  animation-delay: 1600ms;
}
.menu .section:nth-of-type(9) {
  animation-delay: 1800ms;
}
.menu .section:nth-of-type(10) {
  animation-delay: 2000ms;
}
.menu .section:nth-of-type(11) {
  animation-delay: 2200ms;
}
.menu .section:nth-of-type(12) {
  animation-delay: 2400ms;
}
.menu .section {
  position: relative;
  top: 5vh;
  overflow: hidden;
  animation: shift-up 3s;
  animation-fill-mode: forwards;
}
.menu .section > h3 {
  font-weight: 700;
  margin: 1rem;
  content: "@";
  text-transform: uppercase;
  padding: 1rem 0 0.5rem 0;
  font-weight: 300;
  border-bottom: 3px #99E2D0 solid;
  border-width: thick;
  width: 12%;
}
@keyframes shift-up {
  to {
    top: 0;
  }
}
.menu .section .plat {
  display: flex;
  align-items: stretch;
  background-color: #fff;
  margin: 1em;
  border-radius: 20px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  box-shadow: 0 0 19px 0 lightgrey;
}
.menu .section .plat .description {
  padding: 1em;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.menu .section .plat .description h3 {
  font-size: 1em;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
.menu .section .plat .description div {
  font-size: 0.75em;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
.menu .section .plat .price {
  display: flex;
  align-items: center;
  margin-left: auto;
  font-weight: 900;
  padding-right: 1rem;
}
.menu .section .plat .check {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: -6rem;
  min-width: 6rem;
  font-weight: 900;
  background-color: #99E2D0;
  transition: all 1s;
}
.menu .section .plat .check i {
  background-color: white;
  color: #99E2D0;
  border-radius: 50%;
  padding: 0.3rem;
}
.menu .section .plat:hover .check {
  margin-right: 0;
}
@keyframes rot {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}
.menu .section .plat:hover .check i {
  animation: rot 1s;
}

.commander {
  display: flex;
  justify-content: center;
  padding: 3rem 0 4rem 0;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/